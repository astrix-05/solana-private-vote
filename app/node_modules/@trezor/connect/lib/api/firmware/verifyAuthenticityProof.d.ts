import { PROTO } from '../../constants';
import { DeviceAuthenticityBlacklistConfig } from '../../data/deviceAuthenticityBlacklistConfig';
import { DeviceAuthenticityConfig } from '../../data/deviceAuthenticityConfigTypes';
import { AuthenticateDeviceResult } from '../../types/api/authenticateDevice';
interface AuthenticityProofData extends PROTO.AuthenticityProof {
    challenge: Buffer;
    config: DeviceAuthenticityConfig;
    blacklistConfig: DeviceAuthenticityBlacklistConfig;
    allowDebugKeys?: boolean;
    deviceModel: keyof typeof PROTO.DeviceModelInternal;
}
export declare const getRandomChallenge: () => Buffer<ArrayBufferLike>;
export declare const verifyAuthenticityProof: ({ optiga_certificates, optiga_signature, challenge, config, blacklistConfig, allowDebugKeys, deviceModel, }: AuthenticityProofData) => Promise<AuthenticateDeviceResult>;
export {};
//# sourceMappingURL=verifyAuthenticityProof.d.ts.map